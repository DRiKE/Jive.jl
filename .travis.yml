# Documentation: http://docs.travis-ci.com/user/languages/julia/
notifications:
  email: false

language: julia

os:
  - linux
  - osx
  - windows

julia:
  - 1.3

matrix:
  include:
    - os: linux
      julia: 1.1
    - os: linux
      julia: nightly

script:
  -                 julia --color=yes --project        -e 'using Pkg; pkg"resolve"'
  - JIVE_PROCS=auto julia --color=yes --project        -e 'using Pkg; Pkg.test()'
  - JIVE_PROCS=0    julia --color=yes --project -pauto -e 'using Pkg; Pkg.test()'
  - cd test
  - julia --color=yes        runtests.jl jive
  - julia --color=yes        runtests.jl jive/s jive/m start=2
  - julia --color=yes -pauto runtests.jl jive/s jive/m start=2
  - julia --color=yes -pauto -e 'using Jive; runtests(@__DIR__, skip=["Example", "errors", "jive/onlyonce/heavy.jl", "jive/__END__/included.jl", "jive/s", "jive/__REPL__"], node1=["jive/m"])'
  - julia --color=yes -pauto -e 'using Jive; runtests(@__DIR__, skip=["jive/__END__/included.jl", "jive/__REPL__"], targets=["errors", "jive"], node1=["jive/m"])' || true

  - cd ../..
  - julia --color=yes -e 'using Pkg; pkg"dev Jive.jl"'
  - cd Jive.jl
  - julia --color=yes -e 'using Pkg; pkg"dev test/Example"'
  - cd test/Example
  - julia --color=yes -p2 --project   test/runtests.jl example
  - julia --color=yes -p2 --project=. test/runtests.jl example

  - cd ../../
  - julia --color=yes --project -e 'using Pkg; Pkg.test(coverage=true)'

after_success:
  - if [[ "$TRAVIS_OS_NAME" == linux && "$TRAVIS_JULIA_VERSION" == 1.3 ]] ; then julia --project -e 'using Pkg;
                                                                                                     Pkg.add("Coverage");
                                                                                                     using Coverage;
                                                                                                     Codecov.submit(process_folder())' ; fi
